ðŸ‘‰Problem:: Interviews
	Samantha interviews many candidates from different colleges using coding challenges and contests. 
	Write a query to print the contest_id, hacker_id, name, and the sums of total_submissions,
	total_accepted_submissions, total_views, and 	total_unique_views for each contest sorted by contest_id. 
	Exclude the contest from the result if all four sums are 0 .

	Note: A specific contest can be used to screen candidates at more than one college, but each college only holds  screening contest

ðŸ“°SOLUTION: ( Run on MS SQL Server) 
----------------------------------------------------------------
WITH ViewAgg AS (
    SELECT challenge_id,
           SUM(total_views) AS total_views,
           SUM(total_unique_views) AS total_unique_views
    FROM View_Stats
    GROUP BY challenge_id
),
SubmissionAgg AS (
    SELECT challenge_id,
           SUM(total_submissions) AS total_submissions,
           SUM(total_accepted_submissions) AS total_accepted_submissions
    FROM Submission_Stats
    GROUP BY challenge_id
)
SELECT c.contest_id,
       c.hacker_id,
       c.name,
       SUM(s.total_submissions) AS total_submissions,
       SUM(s.total_accepted_submissions) AS total_accepted_submissions,
       SUM(v.total_views) AS total_views,
       SUM(v.total_unique_views) AS total_unique_views
FROM Contests c
JOIN Colleges col ON c.contest_id = col.contest_id
JOIN Challenges ch ON col.college_id = ch.college_id
LEFT JOIN ViewAgg v ON ch.challenge_id = v.challenge_id
LEFT JOIN SubmissionAgg s ON ch.challenge_id = s.challenge_id
GROUP BY c.contest_id, c.hacker_id, c.name
HAVING 
    (SUM(s.total_submissions) +
    SUM(s.total_accepted_submissions) +
    SUM(total_views) +
    SUM(v.total_unique_views)) > 0
ORDER BY c.contest_id;
--------------------------------------------------------------
